name: macOS ARM64 Qt Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  mac-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Python & aqt (venv)
        run: |
          brew install python3
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install aqtinstall
          echo "PATH=$PWD/venv/bin:$PATH" >> $GITHUB_ENV

      - name: Install Qt 6.8.3 (ARM64 - clang_64)
        run: |
          aqt install-qt mac desktop 6.8.3 clang_64 --outputdir Qt

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/Qt/6.8.3/macos" \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --parallel

      - name: Deploy Qt into .app (macdeployqt)
        run: |
          APP=$(find build -name "*.app" -type d | head -n 1)
          echo "Found app: $APP"
          "$GITHUB_WORKSPACE/Qt/6.8.3/macos/bin/macdeployqt" "$APP" -qmldir=. -verbose=2
          echo "APP_BUNDLE=$APP" >> $GITHUB_ENV

      - name: Remove quarantine flags (avoid “damaged” error)
        run: |
          xattr -cr "$APP_BUNDLE"

      - name: Zip Application Bundle
        run: |
          APP_NAME=$(basename "$APP_BUNDLE")
          ZIP_FILE="${APP_NAME%.app}-macOS-arm64.zip"
          zip -r "$ZIP_FILE" "$APP_BUNDLE"
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-arm64-App
          path: ${{ env.ZIP_FILE }}

