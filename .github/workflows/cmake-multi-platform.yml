name: Build Qt App

on:
  push:
    branches: [ main ]
  workflow_dispatch:
env:
  VERSION: "1.0.0"
  EXECUTABLE: "QtApp"
  APPLICATION: "Qt App"
  QMAKE_PROJECT: "QtApp.pro"
  QML_DIR_NIX: "assets/qml"
  QML_DIR_WIN: "assets\\qml"

#--------------------------------------------------------------------------------
# Workflow jobs (GNU/Linux, macOS & Windows)
#--------------------------------------------------------------------------------

jobs:
  #
  # GNU/Linux build (we run on Ubuntu 16.04 to generate AppImage)
  #
  build-linux:
    runs-on: ubuntu-16.04
    steps:
      #
      # Checkout the repository
      #
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      #
      # Install Qt
      #
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
          
      #
      # Install additional dependencies, stolen from:
      # https://github.com/mapeditor/tiled/blob/master/.github/workflows/packages.yml
      #
      - name: Install dependencies
        run: |
             sudo apt-get update
             sudo apt-get install libgl1-mesa-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libzstd-dev
        
      #
      # Compile the application
      #
      - name: Compile
        run: |
             qmake ${{env.QMAKE_PROJECT}} CONFIG+=release PREFIX=/usr
             make -j8
             
      #
      # Create the AppImage
      #
      - name: Create AppImage
        run: | 
             make INSTALL_ROOT=appdir install
             wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt
             chmod a+x linuxdeployqt
             ./linuxdeployqt appdir/usr/share/applications/*.desktop -appimage -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so -qmldir="${{env.QML_DIR_NIX}}"
     
      #
      # Rename AppImage to match "%AppName%-%Version%-Linux.AppImage" format
      #
      - name: Rename AppImage
        run: mv *.AppImage ${{env.EXECUTABLE}}-${{env.VERSION}}-Linux.AppImage
        
      #
      # Upload AppImage to build artifacts
      #
      - name: Upload AppImage
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.EXECUTABLE}}-${{env.VERSION}}-Linux.AppImage
          path: ${{env.EXECUTABLE}}-${{env.VERSION}}-Linux.AppImage
             
  #
