name: Build Qt App (Windows)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest

    env:
      BUILD_DIR: build
      APP_NAME: apptest_qt   # <-- Change to your real executable name (important!)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt 6.8.2 (GCC)
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.2
          host: linux
          target: desktop
          arch: gcc_64
          cache: true

      - name: Install required system libs
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake patchelf libgl1-mesa-dev fuse

      - name: Configure
        run: cmake -S . -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --parallel

      - name: Download linuxdeploy + Qt plugin
        run: |
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage

      - name: Create AppImage
        run: |
          mkdir -p AppDir
          EXE="${{ env.BUILD_DIR }}/${{ env.APP_NAME }}"
          echo "Using executable: $EXE"

          ./linuxdeploy-x86_64.AppImage --appdir AppDir --executable "$EXE" \
            --desktop-file deploy/app.desktop \
            --icon-file deploy/app.png \
            --plugin qt --output appimage

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux-AppImage
          path: "*.AppImage"

